
const mongoose = require('mongoose');

const userSchema = new mongoose.Schema({
  email: { type: String, required: true, unique: true },
  username: { type: String, required: true },
  accountNumber: { type: String, required: false, unique: true },
  customerId: { type: String, required: false, unique: true },
  accountName: { type: String, required: false },
  bankName: { type: String, required: false },
  password: { type: String, required: true },
  wallet: { type: mongoose.Schema.Types.ObjectId, ref: 'Wallet', required: true },
  refreshTokens: { type: [], required: false },
  resetToken: { type: String, required: false },
  verificationToken: { type: String, required: false },
  resetTokenExpiration: { type: Date, required: false },
  profile: { type: mongoose.Schema.Types.ObjectId, ref: 'Profile', required: true },
  isEmailVerified: { type: Boolean, default: false },
  status: { type: String, enum: ['Good', 'Critical', 'Bad', 'Worse', 'Fair'], default: 'Excellent' },
  isPhoneVerified: { type: Boolean, default: false },
  isSubscribed: { type: Boolean, default: false },
  phoneNumber: { type: String, required: false, unique: true },
  tag: { type: String, required: false, unique: true },
  pin: { type: String, required: false },
  bvn: { type: String, required: false, unique: true },
  otp: { type: String, required: true},
  tier : { type: Number, default : 0 },
  isBlocked: { type: Boolean, default: false },
  isActive: { type: Boolean, default: true },
  otpExpiration: { type: Date, default: Date.now },
  timestamp: { type: Date, default: Date.now },
  blockedUntil: { type: Date, default: Date.now },
  accessToken: { type: String, required: false },
  loginAttempts: { type: Number, default: 0},
  lastLoginAttemptAt: { type: Date, default: Date.now()},
  subscriptions: { type: [], default: []}
});

module.exports = mongoose.model('User', userSchema);


// email: { type: String, unique: true, required: true },
// customerId: { type: String, required: false, unique: true },
// firstname: { type: String, required: true },
// bankName: { type: String, required: false },
// accountNumber: { type: String, required: false, unique: true },
// accountName: { type: String, required: false },
// lastname: { type: String, required: true },
// password: { type: String, required: true },
// wallet: { type: mongoose.Schema.Types.ObjectId, ref: "Wallet", required: false, unique: true },
// role: { type: mongoose.Schema.Types.ObjectId, ref: "Role", required: false },
// phoneNumber: { type: String, required: false, unique: true },
// tag: { type: String, required: false, unique: true },
// pin: { type: String, required: false },
// bvn: { type: String, required: false, unique: true },
// isVerified: { type: Boolean, default: false },
// otp: { type: String, required: true},
// tier : { type: Number, default : 0 },
// isBlocked: { type: Boolean, default: false },
// isActive: { type: Boolean, default: true },
// otpExpiration: { type: Date, default: Date.now },
// timestamp: { type: Date, default: Date.now },
// blockedUntil: { type: Date, default: Date.now },
// accessToken: { type: String, required: false },
// loginAttempts: { type: Number, default: 0},
// lastLoginAttemptAt: { type: Date, default: Date.now()},
// refreshTokenExpires: { type: Date, required: false },
